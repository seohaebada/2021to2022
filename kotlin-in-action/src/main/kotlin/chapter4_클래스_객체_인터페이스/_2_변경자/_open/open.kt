package chapter4_클래스_객체_인터페이스._2_변경자._open

/*
자바에서는 final 로 명시적으로 상속을 금지하지 않는 모든 클래스를 다른 클래스가 상속할 수 있다.
이렇게 기본적으로 상속이 가능하면 편리한 경우도 많지만 문제가 생기는 경우도 많다.

취약한 기반 클래스(fragile base class)
하위 클래스가 기반 클래스에 대해 가졌던 가정이 기반 클래스를 변경함으로써 깨져버린 경우에 생긴다.
어떤 클래스가 자신을 상속하는 방법에 대해 정확한 규칙을 제공하지 않는다면 그 클래스의 클라이언트는 기반 클래스를 작성한 사람의 의도와
다른 방식으로 메서드를 오버라이드할 위험이 있다.
모든 하위 클래스를 분석하는 것은 불가능 하므로 기반 클래스르 ㄹ변경하는 경우 하위 클래스의 동작이 예키지않게 바뀔 수도 있다는 면에서
기반 클래스는 취약하다.

"상속을 위한 설계와 문서를 갖추거나, 그럴 수 없다면 상속을 금지하라."
이는 하위클래스에서 오버라이드하게 의도된 클래스와 메서드가 아니라면 모두 final로 만들라는 뜻이다.

코틀린도 마찬가지다.
자바의 클래스와 메서드는 기본적으로 상속에 열려있지만 코틀린의 클래스와 메서드는 기본적으로 final이다.
어떤 클래스의 상속을 허용하려면 클래스 앞에 open 변경자를 붙여야한다.
오버라이드를 허용하고 싶은 메서드나 프로퍼티의 앞에도 open 변경자를 붙여야한다.
 */