package chapter3_함수_정의와_호출._6_문자열과_정규식

/*
코틀린 문자열은 자바 문자열과 같다.
코틀린 코드가 만들어낸 문자열을 아무 자바 메서드에 넘겨도 되며,
자바 코드에서 받은 문자열을 아무 코틀린 표준 라이브러리 함수에 전달해도 문제가 없다.

문자열 나누기
String의 split 메서드
자바에서 split 메서드를 보자.
"12.345-6.A".split(".")
위 코드의 결과는 [12, 345-6, A]가 아닌 빈 문자열이다.
자바의 split의 구분 문자열은 실제로 정규식이며, 마침표(.)는 모든 문자를 나타내는 정규식으로 해석된다.

코틀린에서는 split 확장 함수를 제공함으로써 혼동을 야기하는 메서드를 감춘다.
정규식을 파라미터로 받는 함수는 String이 아닌 Regex 타입의 값을 받는다.
따라서 코틀린에서는 split 함수에 전달하는 값의 타입에 따라 정규식이나 일반 텍스트 중 어느것을 문자열을 분리하는지 쉽게 알 수있다.
 */

fun main() {
    println("12.345-6.A".split(".")) // [12, 345-6, A]

    // toRegex() : 문자열을 정규식으로 변환할 수 있는 확장 함수
    println("12.345-6.A".split("\\.|-".toRegex())) // [12, 345, 6, A]

    // 여러 구분 문자열을 지정한다.
    println("12.345-6.A".split(".", "-")) // [12, 345, 6, A]
}