package chapter3_함수_정의와_호출._5_확장함수_확장프로퍼티

/*
기존 자바 API를 재작성하지 않고도 자바 코드를 변환할 수 있어야한다.

확장함수
어떤 클래스의 멤버 메서드인것처럼 호출할 수 있지만 그 클래스의 밖에 선언된 함수다.
확장함수를 만들려면 추가하려는 함수 이름 앞에 그 함수가 확장할 클래스의 이름을 덧붙이기만 하면 된다.

- 객체 타입 : 클래스 이름
- 수신 객체 :  확장 함수가 호출되는 대상이 되는 값

확장 함수가 캡슐화를 깨지는 않는다.
클래스 안에서 정의한 메서드와 달리 확장 함수 안에서는 클래스 내부에서만 사용할 수 있는 비공개(private) 멤버나 보호된(protected) 멤버를 사용할 수 없다.

클래스의 멤버 메서드와 확장 함수를 모두 '메서드'라고 부르자.
클라이언트에게 자신이 호출하려는 메서드가 확장함수인지 멤버 메서드인지의 여부는 중요하지않다.

확장함수를 정의했다고 해도 자동으로 프로젝트 안의 모든 소스코드에서 그 함수를 사용할 수 있지는 않다.
그 함수를 다른 클래스나 함수와 마찬가지로 import 해야한다.
확장 함수를 정의하자마자 어디서는 그 함수를 쓸 수 있다면 한 클래스에 같은 이름의 확장 함수가 둘 이상 있어서
이름이 충돌하는 경우가 자주 생길 수 있다.

 */

// String : 수신 객체 타입
// this : 수신 객체
fun String.lastChar() :Char = this.get(this.length - 1)

// this 생략 가능
fun String.lastChar2() :Char = get(length - 1)

fun main() {
    // 수신 객체 타입 : String
    // 수신 객체 : Kotlin

    // String 클래스에 새로운 메서드를 추가하는 것과 같다.
    println("Kotlin".lastChar())

    // JAVA 에서 호출
    // char c = StringUtilKt.lastChar("Java");
}