server:
  port: 0 # 0 이라는 것은 포트를 랜덤으로 사용한다는 것  (포트에 상관없이 여러개 띄울수 있음)
  # 동적 포트로 한다면 유레카에 인스턴스가 1개만 등록됨 (여러개를 띄어도) 그래서 아래 유레카 설정을 추가해야함 (instance: 참고)
  # port: 9001  # 포트 지정

spring:
  application:
    name: user-service  # eureka 에서 보여지는 service application 명은 대소문자 구분 없음
  zipkin: # zipkin 설정
    base-url: http://127.0.0.1:9411
    enabled: true
  sleuth:
    sampler:
      probability: 1.0
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true # 외부에서 접속 허용
      path: /h2-console
# Config server 로 이동
#  datasource:
#    driver-class-name: org.h2.Driver
#    url: jdbc:h2:mem:testdb
#   username : sa
#    password: 1234

eureka:
  # 동적 포트로 인한 선언
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true  # 등록
    fetch-registry: true
    service-url: # user-service 는 eureka 클라이언트 역할인데, 서버의 위치를 지정
      defaultZone: http://127.0.0.1:8761/eureka  # eureka url

# 콘솔 (프로젝트 위치로 이동) -> mvn spring-boot:run -> Eureka 서비스는 커맨드 라인에서 직접 실행하자.  (간단하게)
# -> 1) 유레카 서버 : /Users/seohaekim/workspace/inflearn_msa_spring_cloude/ecommerce
# -> 2) 해당 서버 실행

greeting:
  message: Welcome to the Simple E-commece.


# token:
#  expiration_time: 86400000  # 60(1분) * 60 (60분) * 24(하루) * 1000(ms) = 86400000 (하루짜리 토큰)
#  secret: user_token

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, bursefresh  # /acturator/health , acturator/refresh 등 API 호출로 각 정보 확인 가능
        #refresh 을 호출해야 변경된 .yml 파일 내용이 반영된다. (refresh:POST, health:GET)


logging:
  level:
    com.example.userservice: DEBUG
