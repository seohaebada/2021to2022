package com.algorithm._00_알고리즘_구현.youtube1;

/*
플로이드
- 모든 노드에서 다른 모든 노드까지 가는데 최소비용 (O(V^3))
- 다익스트라 : 한 노드 -> 다른 모든 노드, (O(ElgV))

다익스트라는 시작점에 대한 최단만 구했다면, 플로이드는 모든 노드를 시작점으로 두고 구한다.
다익스트라도 시작점 마다 다익스트라를 수행해서 구할 수는 있지만, 시간복잡도가 좀더 오래걸린다. (O(V^3lgV))

[작동원리]
- 노드 j -> 노드 i 비용 배열 만들기, 초기값: INF
- 간선의 값을 비용 배열에 반영
- 모든 노드에 대해 해당 노드 거쳐서 가서 비용 작아질 경우 값 갱신

[팁]
- 그래프 거리 문제 나올때
  -> 한점 -> 여러점 : 다익스트라(ElgV)
  -> 여러점 -> 여러점 : 플로이드(V^3)
- 코드가 복잡하므로 연습 필요

https://devfunny.tistory.com/648
*/
public class _11_플로이드 {
}
